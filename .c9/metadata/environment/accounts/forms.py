{"filter":false,"title":"forms.py","tooltip":"/accounts/forms.py","undoManager":{"mark":91,"position":91,"stack":[[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError",""],"id":1}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":5,"column":0},"end":{"row":38,"column":28},"action":"insert","lines":["class UserRegistrationForm(UserCreationForm):","    \"\"\"Form used to register a new user/add/ label=\"Password Confirmation\",\"\"\"","","    password1 = forms.CharField( ","        label=\"Password Confirmation\", ","        widget=forms.PasswordInput)","      ","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","class Meta:","    model = User","    fields = ['email', 'username', 'password1', 'password2']","    \"\"\"add/clean_email and clean_password2\"\"\"","","def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2    "],"id":3}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""]},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""]},{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":5,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)",""],"id":5}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":13,"column":0},"end":{"row":15,"column":0},"action":"remove","lines":["","",""],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":47,"column":28},"action":"remove","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    \"\"\"Form used to register a new user/add/ label=\"Password Confirmation\",\"\"\"","","    password1 = forms.CharField( ","        label=\"Password Confirmation\", ","        widget=forms.PasswordInput)","      ","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","class Meta:","    model = User","    fields = ['email', 'username', 'password1', 'password2']","    \"\"\"add/clean_email and clean_password2\"\"\"","","def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2    "],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":7,"column":58},"action":"insert","lines":["from django import forms","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)"],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["#"],"id":10}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"insert","lines":["#"],"id":11}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["3"],"id":12}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"remove","lines":["3"],"id":13}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["#"],"id":14}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"insert","lines":["#"],"id":15}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["#"],"id":16}],[{"start":{"row":7,"column":59},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":17}],[{"start":{"row":8,"column":0},"end":{"row":47,"column":24},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    username_or_email = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    password1 = forms.CharField(label='Password', widget=forms.PasswordInput)","    password2 = forms.CharField(","        label='Password Confirmation',","        widget=forms.PasswordInput","    )","","    class Meta:","        model = User","        fields = ['username', 'email', 'password1', 'password2']","","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email addresses must be unique.')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Password must not be empty\")","","        if password1 != password2:","            raise ValidationError(\"Passwords do not match\")","","        return password2"],"id":18}],[{"start":{"row":8,"column":0},"end":{"row":47,"column":24},"action":"remove","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    username_or_email = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    password1 = forms.CharField(label='Password', widget=forms.PasswordInput)","    password2 = forms.CharField(","        label='Password Confirmation',","        widget=forms.PasswordInput","    )","","    class Meta:","        model = User","        fields = ['username', 'email', 'password1', 'password2']","","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email addresses must be unique.')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Password must not be empty\")","","        if password1 != password2:","            raise ValidationError(\"Passwords do not match\")","","        return password2"],"id":19}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["#"],"id":20}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"remove","lines":["#"],"id":21}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"remove","lines":["#"],"id":22}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"remove","lines":["#"],"id":23}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"remove","lines":["#"],"id":24}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["#"],"id":25}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"insert","lines":["#"],"id":26}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["#"],"id":27}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["#"],"id":28}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"insert","lines":["#"],"id":29}],[{"start":{"row":7,"column":59},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":30},{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":9,"column":0},"end":{"row":42,"column":68},"action":"insert","lines":["from django.shortcuts import render, redirect, reverse","from django.contrib import auth, messages","from accounts.forms import UserLoginForm","","def index(request):","    \"\"\"Return the index.html file\"\"\"","    return render(request,  'index.html')","","","def logout(request):","    \"\"\"Log the user out\"\"\"","    auth.logout(request)","    messages.success(request, \"You have successfully been logged out\")","    return redirect(reverse('index'))","","","def login(request):","    \"\"\"Return a login page\"\"\"","    if request.method == \"POST\":","        login_form = UserLoginForm(request.POST)","","        if login_form.is_valid():","            user = auth.authenticate(username=request.POST['username'],","                                    password=request.POST['password'])","            ","","            if user:","                auth.login(user=user, request=request)","                messages.success(request, \"You have successfully logged in!\")","            else:","                login_form.add_error(None, \"Your username or password is incorrect\")","    else:","        login_form = UserLoginForm()","    return render(request, 'login.html', {'login_form': login_form})"],"id":31}],[{"start":{"row":9,"column":0},"end":{"row":9,"column":1},"action":"insert","lines":["#"],"id":32}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"insert","lines":["3"],"id":33}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"remove","lines":["3"],"id":34}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"insert","lines":["#"],"id":35}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"insert","lines":["#"],"id":36}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"insert","lines":["#"],"id":37}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"insert","lines":["3"],"id":38}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"remove","lines":["3"],"id":39}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"insert","lines":["#"],"id":40}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"insert","lines":["#"],"id":41}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"insert","lines":["3"],"id":42}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"insert","lines":["3"],"id":43}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"remove","lines":["3"],"id":44}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"insert","lines":["#"],"id":45}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"remove","lines":["3"],"id":46}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"insert","lines":["#"],"id":47}],[{"start":{"row":20,"column":0},"end":{"row":20,"column":1},"action":"insert","lines":["#"],"id":48}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":1},"action":"insert","lines":["#"],"id":49}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":1},"action":"insert","lines":["#"],"id":50}],[{"start":{"row":25,"column":0},"end":{"row":25,"column":1},"action":"insert","lines":["3"],"id":51}],[{"start":{"row":25,"column":0},"end":{"row":25,"column":1},"action":"remove","lines":["3"],"id":52}],[{"start":{"row":25,"column":0},"end":{"row":25,"column":1},"action":"insert","lines":["#"],"id":53}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"insert","lines":["#"],"id":54}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":1},"action":"insert","lines":["#"],"id":55}],[{"start":{"row":28,"column":0},"end":{"row":28,"column":1},"action":"insert","lines":["#"],"id":56}],[{"start":{"row":30,"column":0},"end":{"row":30,"column":1},"action":"insert","lines":["3"],"id":57}],[{"start":{"row":30,"column":0},"end":{"row":30,"column":1},"action":"remove","lines":["3"],"id":58}],[{"start":{"row":30,"column":0},"end":{"row":30,"column":1},"action":"insert","lines":["#"],"id":59}],[{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"insert","lines":["#"],"id":60}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"insert","lines":["3"],"id":61}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"remove","lines":["3"],"id":62}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"insert","lines":["3"],"id":63}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"remove","lines":["3"],"id":64}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"insert","lines":["#"],"id":65}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":1},"action":"insert","lines":["3"],"id":66}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":1},"action":"remove","lines":["3"],"id":67}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":1},"action":"insert","lines":["#"],"id":68}],[{"start":{"row":36,"column":0},"end":{"row":36,"column":1},"action":"insert","lines":["#"],"id":69}],[{"start":{"row":37,"column":0},"end":{"row":37,"column":1},"action":"insert","lines":["3"],"id":70}],[{"start":{"row":37,"column":0},"end":{"row":37,"column":1},"action":"remove","lines":["3"],"id":71}],[{"start":{"row":37,"column":0},"end":{"row":37,"column":1},"action":"insert","lines":["#"],"id":72}],[{"start":{"row":38,"column":0},"end":{"row":38,"column":1},"action":"insert","lines":["#"],"id":73}],[{"start":{"row":39,"column":0},"end":{"row":39,"column":1},"action":"insert","lines":["#"],"id":74}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":1},"action":"insert","lines":["#"],"id":75}],[{"start":{"row":41,"column":0},"end":{"row":41,"column":1},"action":"insert","lines":["#"],"id":76}],[{"start":{"row":42,"column":0},"end":{"row":42,"column":1},"action":"insert","lines":["#"],"id":77}],[{"start":{"row":42,"column":69},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":78},{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":44,"column":0},"end":{"row":67,"column":64},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    \"\"\"Form used to register a new user\"\"\"","","    password = forms.CharField(widget=forms.PasswordInput)","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","    class Meta:","        model = User","        fields = ['email', 'username', 'password1', 'password2']"],"id":79}],[{"start":{"row":67,"column":64},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":80},{"start":{"row":68,"column":0},"end":{"row":68,"column":8},"action":"insert","lines":["        "]},{"start":{"row":68,"column":8},"end":{"row":69,"column":0},"action":"insert","lines":["",""]},{"start":{"row":69,"column":0},"end":{"row":69,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":["<"],"id":81},{"start":{"row":68,"column":1},"end":{"row":68,"column":2},"action":"insert","lines":["-"]},{"start":{"row":68,"column":2},"end":{"row":68,"column":3},"action":"insert","lines":["-"]},{"start":{"row":68,"column":3},"end":{"row":68,"column":4},"action":"insert","lines":["-"]},{"start":{"row":68,"column":4},"end":{"row":68,"column":5},"action":"insert","lines":["-"]}],[{"start":{"row":68,"column":5},"end":{"row":68,"column":6},"action":"insert","lines":["a"],"id":82},{"start":{"row":68,"column":6},"end":{"row":68,"column":7},"action":"insert","lines":["d"]},{"start":{"row":68,"column":7},"end":{"row":68,"column":8},"action":"insert","lines":["d"]},{"start":{"row":68,"column":8},"end":{"row":68,"column":9},"action":"insert","lines":["-"]},{"start":{"row":68,"column":9},"end":{"row":68,"column":10},"action":"insert","lines":["-"]},{"start":{"row":68,"column":10},"end":{"row":68,"column":11},"action":"insert","lines":["-"]}],[{"start":{"row":68,"column":11},"end":{"row":68,"column":12},"action":"insert","lines":["-"],"id":83},{"start":{"row":68,"column":12},"end":{"row":68,"column":13},"action":"insert","lines":["-"]},{"start":{"row":68,"column":13},"end":{"row":68,"column":14},"action":"insert","lines":["-"]},{"start":{"row":68,"column":14},"end":{"row":68,"column":15},"action":"insert","lines":["-"]},{"start":{"row":68,"column":15},"end":{"row":68,"column":16},"action":"insert","lines":[">"]}],[{"start":{"row":68,"column":1},"end":{"row":68,"column":2},"action":"insert","lines":["!"],"id":84}],[{"start":{"row":68,"column":1},"end":{"row":68,"column":2},"action":"remove","lines":["!"],"id":85},{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"remove","lines":["<"]}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"insert","lines":["#"],"id":86}],[{"start":{"row":68,"column":18},"end":{"row":68,"column":24},"action":"remove","lines":["      "],"id":87},{"start":{"row":68,"column":18},"end":{"row":69,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":69,"column":0},"end":{"row":87,"column":19},"action":"insert","lines":["def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2","© 2019 GitHub, Inc."],"id":88}],[{"start":{"row":87,"column":0},"end":{"row":87,"column":19},"action":"remove","lines":["© 2019 GitHub, Inc."],"id":89}],[{"start":{"row":76,"column":0},"end":{"row":76,"column":4},"action":"remove","lines":["    "],"id":90}],[{"start":{"row":44,"column":23},"end":{"row":44,"column":24},"action":"remove","lines":["s"],"id":91}],[{"start":{"row":44,"column":23},"end":{"row":44,"column":24},"action":"insert","lines":["s"],"id":92}]]},"ace":{"folds":[],"scrolltop":709.5,"scrollleft":0,"selection":{"start":{"row":44,"column":24},"end":{"row":44,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1579541895138,"hash":"da84dd2be4bbc723198448befc67d9067b45489e"}